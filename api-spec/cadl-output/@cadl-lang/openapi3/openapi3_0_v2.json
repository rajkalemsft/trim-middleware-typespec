{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft TRIM Inventory API specification.",
    "version": "1.0.0",
    "description": "Microsoft TRIM Inventory API specification."
  },
  "tags": [],
  "paths": {
    "/messaging/queuemessage": {
      "post": {
        "operationId": "messagingResource_queuemessage",
        "description": "API endpoint performs required authorization, validates message payload schema per mssage type and respond in synchronous way indicating if the message was accepted or rejected for further processing.",
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed."
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Access is unauthorized."
          },
          "403": {
            "description": "Access is forbidden"
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageRequest"
              }
            }
          }
        }
      }
    },
    "/messaging/requeststatus/{messageId}": {
      "get": {
        "operationId": "messagingResource_read",
        "description": "Get request status by uniqiue messag/correlation Id.",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Access is unauthorized."
          },
          "403": {
            "description": "Access is forbidden"
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersion": {
        "name": "api-version",
        "in": "query",
        "required": true,
        "description": "The version of the API in the form YYYY-MM-DD",
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "A server-defined code that uniquely identifies the error."
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            ],
            "description": "Top-level error object"
          }
        },
        "description": "Error response",
        "required": [
          "code",
          "error"
        ]
      },
      "ErrorDetail": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "A server-defined code that uniquely identifies the error."
          },
          "message": {
            "type": "string",
            "description": "A human-readable representation of the error."
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetail"
            },
            "x-cadl-name": "ErrorDetail[]",
            "description": "An array of details about specific errors that led to this reported error."
          }
        },
        "description": "Error details",
        "required": [
          "code",
          "message"
        ]
      },
      "MessageRequest": {
        "type": "object",
        "properties": {
          "MessageId": {
            "type": "string",
            "description": "Unique message id. Used for all support/troubleshooting reasons."
          },
          "MessageType": {
            "type": "string",
            "description": "Message type. Validated and used for internal system processing."
          },
          "Version": {
            "type": "string",
            "description": "Message Version. Useful for schema validations."
          },
          "RequestPayload": {
            "type": "string",
            "description": "Request message Content."
          }
        },
        "description": "Message comprised of message header and individual inventory items.",
        "required": [
          "MessageId",
          "MessageType",
          "Version",
          "RequestPayload"
        ]
      },
      "MessageResponse": {
        "type": "object",
        "properties": {
          "ResponsePayload": {
            "type": "string",
            "description": "Response message content."
          },
          "Processed": {
            "type": "boolean",
            "description": "Indicates if the processing is completed."
          },
          "Error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Error"
              }
            ],
            "description": "Messsage processing result."
          }
        },
        "description": "Message comprised of message header and individual inventory items.",
        "required": [
          "ResponsePayload",
          "Processed",
          "Error"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/MessageRequest"
          }
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://api.trim.microsoft.com",
      "description": "Microsoft TRIM API server.",
      "variables": {}
    }
  ]
}